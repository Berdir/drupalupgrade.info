// @file
// Custom sass mixins
//
// Define the custom mixins for your project here.
// http://sass-lang.com/docs/yardoc/file.SASS_REFERENCE.html#defining_a_mixin

// Makes an element visually hidden, but accessible.
// @see http://snook.ca/archives/html_and_css/hiding-content-for-accessibility
@mixin element-invisible {
  position: absolute !important;
  height: 1px;
  width: 1px;
  overflow: hidden;
  @if $legacy-support-for-ie6 or $legacy-support-for-ie7 {
    clip: rect(1px 1px 1px 1px); // IE6 and IE7 use the wrong syntax.
  }
  clip: rect(1px, 1px, 1px, 1px);
}

// Turns off the element-invisible effect.
@mixin element-invisible-off {
  position: static !important;
  clip: auto;
  height: auto;
  width: auto;
  overflow: auto;
}

// Makes an element visually hidden by default, but visible when focused.
@mixin element-focusable {
  @include element-invisible;

  &:active,
  &:focus {
    @include element-invisible-off;
  }
}

@mixin button($color, $fill, $fill-hover, $border, $border-hover, $shadow) {
  background: $fill;
  border: 1px solid $border;
  display: inline-block;
  padding: 6px 21px;
  margin-right: 20px;
  text-decoration: none;
  font-size: 0.8em;
  text-transform: uppercase;
  @include border-radius(5px);
  @include box-shadow(0 2px 0 0 $shadow);
  color: $color;
  @include single-transition(all, 0.3s, ease);
  &:hover, &:focus {
    @include single-transition(all, 0.3s, ease);
    background: $fill-hover;
    border: 1px solid $border-hover;
    color: white;
  }
}
